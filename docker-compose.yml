version: '3.8'
# development version

services:
  redis-listener:
    build: .
    command: python /app/bot-listener/listener.py
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - redis
  web_app:
    build: .
    command: >
      sh -c "rm -rf /var/www/static/* &&
              python manage.py collectstatic --noinput &&
              python manage.py makemigrations &&
              python manage.py migrate &&
             daphne -b 0.0.0.0 -p 8000 shipkz.asgi:application"
    volumes:
      - .:/app
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    expose:
      - "8000"
    depends_on:
      - db
      - redis
  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./.env:/app/.env
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - web_app
  redis:
    image: redis:latest
    expose:
      - "6379"
    ports:
      - "127.0.0.1:6379:6379"
  celery:
    build: .
    command: celery -A shipkz worker --loglevel=info
    volumes:
      - .:/app
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - redis
      - web_app
  celery-beat:
    build: .
    command: celery -A shipkz beat --loglevel=info
    volumes:
      - .:/app
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - redis
      - web_app
volumes:
  static_volume:
  media_volume:
  postgres_data:
